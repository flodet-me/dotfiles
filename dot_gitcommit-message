
# <type>![optional scope]: <description>                                 (not more than 72 chars)
# <BLANK NEWLINE>
# [optional body]                                                        (not more than 72 chars)
# <BLANK NEWLINE>
# [optional footer(s)]                                                   (not more than 72 chars)
#
#-------------------------------EXAMPLE----------------------------------	
#
# feat![frontend]: Capitalized, short (50 chars or less) summary
# 
# More detailed explanatory text, if necessary.  Wrap it to about 72
# characters or so.  In some contexts, the first line is treated as the
# subject of an email and the rest of the text as the body.  The blank
# line separating the summary from the body is critical (unless you omit
# the body entirely); tools like rebase can get confused if you run the
# two together.
# 
# Write your commit message in the imperative: "Fix bug" and not "Fixed bug"
# or "Fixes bug."  This convention matches up with commit messages generated
# by commands like git merge and git revert.
# 
# Further paragraphs come after blank lines.
# 
# - Bullet points are okay, too
# 
# - Typically a hyphen or asterisk is used for the bullet, followed by a
#   single space, with blank lines in between, but conventions vary here
# 
# - Use a hanging indent
# 
# If you use an issue tracker, add a reference(s) to them at the bottom,
# like so:
# 
# Resolves: #123
#
#-------------------------------TYPES------------------------------------
# 
# The following types should be used for specifying the commit.
#
# feat:     Feature         - Adding functionality or anything related
# fix:      Fix             - Fixing a functionality or anything related to it
# docs:     Documentation   - Adding or edit documentation
# def:	    Default         - Anything related to setting defaults, enforcing defaults or similar
# style:    Styling         - Adjustment of styles and visual representation
# test:     Testing         - Everything related to testing
# chore:    Chore           - Regular code maintenance
